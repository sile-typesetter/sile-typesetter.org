var searchIndex = new Map(JSON.parse('[["sile",{"t":"PPICHHHHHHCHFNNONNONNOOONONNNNONOOOOOOONNNNNOCFNNNNNNNNNNNNNNNNNNNNHNNNN","n":["Err","Ok","Result","cli","get_rusile_exports","inject_paths","inject_version","load_sile","run","start_luavm","types","version","Cli","augment_args","augment_args_for_update","backend","borrow","borrow_mut","class","command","command_for_update","debug","evaluate","evaluate_after","fmt","fontmanager","from","from_arg_matches","from_arg_matches_mut","group_id","input","into","makedeps","option","output","postamble","preamble","quiet","traceback","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use","semver","Semver","add_fields","add_methods","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","fmt","from","from_lua","from_lua_args","from_lua_multi","from_stack_args","from_stack_multi","into","into_lua","into_lua_multi","new","push_into_stack_multi","semver","to_owned","try_from","try_into","type_id"],"q":[[0,"sile"],[12,"sile::cli"],[45,"sile::types"],[46,"sile::types::semver"],[72,"mlua::state"],[73,"mlua::table"],[74,"mlua::error"],[75,"std::path"],[76,"alloc::vec"],[77,"core::option"],[78,"alloc::string"],[79,"clap_builder::builder::command"],[80,"core::fmt"],[81,"clap_builder::parser::matches::arg_matches"],[82,"clap_builder"],[83,"core::result"],[84,"clap_builder::util::id"],[85,"core::any"],[86,"mlua::userdata"],[87,"semver"],[88,"mlua::value"],[89,"mlua::multi"],[90,"mlua::state::raw"]],"i":"j0```````````Al0000000000000000000000000000000``Bl0000000000000000000`0000","f":"````{{{d{b}}}{{h{f}}}}{b{{j{b}}}}00{{{A`{{n{l}}}}{A`{Ab}}{A`{Ab}}{A`{{n{Ab}}}}{A`{{n{Ab}}}}{A`{{n{Ab}}}}{A`{Ab}}{A`{l}}{A`{l}}{A`{{n{Ab}}}}{A`{{n{l}}}}{A`{{n{l}}}}{A`{{n{Ab}}}}AdAd}{{j{Af}}}}{{}{{j{b}}}}`{{}{{j{Ab}}}}`{AhAh}0`{d{{d{c}}}{}}{{{d{Aj}}}{{d{Ajc}}}{}}`{{}Ah}0```{{{d{Al}}{d{AjAn}}}B`}`{cc{}}{{{d{Bb}}}{{Bf{AlBd}}}}{{{d{AjBb}}}{{Bf{AlBd}}}}{{}{{A`{Bh}}}}`{{}c{}}```````{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{dBj}{{{d{AjAl}}{d{Bb}}}{{Bf{AfBd}}}}{{{d{AjAl}}{d{AjBb}}}{{Bf{AfBd}}}}```{{{d{Ajc}}}Af{{Bn{Bl}}}}{{{d{Ajc}}}Af{{C`{Bl}}}}?>{{{d{Bl}}}Bl}{{d{d{Ajc}}}Af{}}{dAf}{{{d{Bl}}}{{d{Cb}}}}{{{d{Bl}}{d{AjAn}}}B`}{cc{}}{{Cd{d{b}}}{{h{Bl}}}}{{CfCh{A`{{d{Cj}}}}{d{b}}}{{Bf{cCl}}}{}}{{Cf{d{b}}}{{Bf{cCl}}}{}}{{CnCh{A`{{d{Cj}}}}{d{D`}}}{{Bf{cCl}}}{}}{{Cn{d{D`}}}{{Bf{cCl}}}{}}{{}c{}}{{{d{b}}}{{Bf{CdCl}}}}{{{d{b}}}{{Bf{CfCl}}}}{{{d{Cj}}}{{j{Bl}}}}{{{d{D`}}}{{Bf{CnCl}}}}{Ab{{j{Bl}}}}{dc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{dBj}","D":"Bl","p":[[5,"Lua",72],[1,"reference"],[5,"Table",73],[8,"Result",74],[8,"Result",0],[5,"PathBuf",75],[5,"Vec",76],[6,"Option",77],[5,"String",78],[1,"bool"],[1,"unit"],[5,"Command",79],[0,"mut"],[5,"Cli",12],[5,"Formatter",80],[8,"Result",80],[5,"ArgMatches",81],[8,"Error",82],[6,"Result",83],[5,"Id",84],[5,"TypeId",85],[5,"Semver",46],[10,"UserDataFields",86],[10,"UserDataMethods",86],[5,"Version",87],[6,"Value",88],[5,"MultiValue",89],[1,"usize"],[1,"str"],[6,"Error",74],[1,"i32"],[5,"RawLua",90]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADIACwAAAAAAAwAJAA4AAQARAAEAFAABABkAAAAcAAIAKAAEAC4ACgA6AAQAQAAIAA=="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3100]}